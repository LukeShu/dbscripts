#!/bin/bash

. "$(dirname $0)/db-functions"
. "$(dirname $0)/config"

if [ $# -ge 1 ]; then
	warning "Calling $(basename $0) with a specific repository is not supported"
	exit 1
fi

# TODO: this might lock too much (architectures)
for repo in ${repos[@]}; do
	for pkgarch in ${ARCHES[@]}; do
		repo_lock ${repo} ${pkgarch} || exit 1
	done
done

msg "Check nonfree in repo:"
nonfree=($(cut -d: -f1 ${BLACKLIST_FILE} | sort -u))
for repo in ${ARCHREPOS[@]}; do
    for pkgarch in ${ARCHES[@]}; do
	msg2 "$repo $pkgarch"
	if [ ! -f "${FTP_BASE}/${repo}/os/${pkgarch}/${repo}${DBEXT}" ]; then
	    continue
	fi
	unset dbpkgs
	unset cleanpkgs
	cleanpkgs=()
	dbpkgs=($(bsdtar -xOf "${FTP_BASE}/${repo}/os/${pkgarch}/${repo}${DBEXT}" | awk '/^%NAME%/{getline;print}' | sort -u ))
	for pkgname in ${dbpkgs[@]}; do
	    if in_array ${pkgname} ${nonfree[@]}; then
            cleanpkgs+=(${pkgname})
	    fi
	done
	if [ ${#cleanpkgs[@]} -ge 1 ]; then
        msg2 "Unfree: ${cleanpkgs[@]}"
	    arch_repo_remove "${repo}" "${pkgarch}" ${cleanpkgs[@]}
	fi
    done
done

for repo in ${repos[@]}; do
	for pkgarch in ${ARCHES[@]}; do
		repo_unlock ${repo} ${pkgarch}
	done
done
